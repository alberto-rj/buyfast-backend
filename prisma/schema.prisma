generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  username  String   @unique
  password String
  firstName String   @map("first_name")
  lastName  String   @map("last_name")
  role      UserRole @default(Customer)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  isActive Boolean @default(true) @map("is_active")
  refreshTokens RefreshToken[]
  cartItems CartItem[]
  @@map("users")
}

model RefreshToken {
  id String @id @default(uuid())
  token String @unique
  userId String @map("user_id")
  expiriesAt DateTime @map("expires_at")
  createdAt DateTime @default(now()) @map("created_at")
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@map("refresh_tokens")
}

enum UserRole {
  Customer
  Admin
}

model Category {
  id String @id @default(uuid())
  name String @unique
  description String?
  slug String @unique
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  isActive Boolean @default(true) @map("is_active")
  products Product[]
  @@map("categories")
}

model Product {
  id String @id @default(uuid())
  name String
  description String?
  price Decimal
  quantity Int @default(0)
  sku String @unique
  categoryId String @map("category_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  isActive Boolean @default(true) @map("is_active")
  isFeatured Boolean @default(false) @map("is_featured")
  weight Decimal?
  dimensions String?

  category Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  cartItems CartItem[]
  images ProductImage[]

  @@map("products")
}

model ProductImage {
  id String @id @default(uuid())
  url String @map("url")
  publicId String @map("public_id")
  isPrimary Boolean @default(false) @map("is_primary")

  altText String? @map("alt_text")
  order Int?
  
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  productId String @map("product_id")
  
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@map("product_images")
}

model CartItem {
  id String @id @default(uuid())
  userId String @map("user_id")
  productId String @map("product_id")
  quantity Int
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@index([userId])
  @@index([productId])
  @@unique([userId, productId])
  @@map("cart_items")
}